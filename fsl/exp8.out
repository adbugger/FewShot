Namespace(T_max=20, backbone='resnet50', base_optimizer='SGD', batch_size=4096, dampening=0.0, dataset='cifar100fs', dataset_root=None, first_augment='CropResize', head='SimpleMLP', image_channels=3, image_mean=(0.5071, 0.4867, 0.4408), image_size=32, image_std=(0.2675, 0.2565, 0.2761), jitter_strength=1.0, loss_function='NTXent', model='SimCLRModel', momentum=0.05, nesterov=True, ntxent_temp=1.0, num_epochs=200, num_workers=4, pin_memory=True, pretrained=False, progress=False, projection_dim=128, save_path='exp8.pth', scheduler='CosineAnnealingLR', second_augment='GaussBlur', secondary_optimizer='LARS', shuffle=True, simple_opt=False, weight_decay=1e-06)
DataParallel(
  (module): SimCLRModel(
    (backbone): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=2048, out_features=1000, bias=True)
    )
    (head): SimpleMLP(
      (l1): Linear(in_features=1000, out_features=512, bias=True)
      (relu): ReLU(inplace=True)
      (l2): Linear(in_features=512, out_features=128, bias=True)
    )
  )
)
Starting Training
-----------------
(  25.227s) Epoch 001/200: Loss=8.594733 (best so far)
(  13.890s) Epoch 002/200: Loss=8.394423 (best so far)
(  11.103s) Epoch 003/200: Loss=8.298154 (best so far)
(  11.063s) Epoch 004/200: Loss=8.266158 (best so far)
(  11.013s) Epoch 005/200: Loss=8.243977 (best so far)
(  11.027s) Epoch 006/200: Loss=8.225498 (best so far)
(  11.025s) Epoch 007/200: Loss=8.214245 (best so far)
(  11.052s) Epoch 008/200: Loss=8.205002 (best so far)
(  11.058s) Epoch 009/200: Loss=8.196127 (best so far)
(  11.066s) Epoch 010/200: Loss=8.191028 (best so far)
(  11.127s) Epoch 011/200: Loss=8.185064 (best so far)
(  11.026s) Epoch 012/200: Loss=8.180199 (best so far)
(  11.100s) Epoch 013/200: Loss=8.176553 (best so far)
(  11.062s) Epoch 014/200: Loss=8.172926 (best so far)
(  11.078s) Epoch 015/200: Loss=8.171531 (best so far)
(  11.052s) Epoch 016/200: Loss=8.168065 (best so far)
(  11.080s) Epoch 017/200: Loss=8.167898 (best so far)
(  11.051s) Epoch 018/200: Loss=8.166664 (best so far)
(  11.103s) Epoch 019/200: Loss=8.166372 (best so far)
(  11.034s) Epoch 020/200: Loss=8.166168 (best so far)
(  11.136s) Epoch 021/200: Loss=8.166108 (best so far)
(  11.042s) Epoch 022/200: Loss=8.166095 (best so far)
(  11.037s) Epoch 023/200: Loss=8.166110
(  11.081s) Epoch 024/200: Loss=8.165783 (best so far)
(  11.088s) Epoch 025/200: Loss=8.164664 (best so far)
(  11.074s) Epoch 026/200: Loss=8.165031
(  11.049s) Epoch 027/200: Loss=8.165512
(  11.125s) Epoch 028/200: Loss=8.165484
(  11.091s) Epoch 029/200: Loss=8.165844
(  11.124s) Epoch 030/200: Loss=8.166399
(  11.152s) Epoch 031/200: Loss=8.167568
(  11.081s) Epoch 032/200: Loss=8.167812
(  11.096s) Epoch 033/200: Loss=8.167969
(  11.124s) Epoch 034/200: Loss=8.168902
(  11.150s) Epoch 035/200: Loss=8.169688
(  11.134s) Epoch 036/200: Loss=8.169200
(  11.113s) Epoch 037/200: Loss=8.168535
(  11.053s) Epoch 038/200: Loss=8.167488
(  11.061s) Epoch 039/200: Loss=8.166830
(  11.115s) Epoch 040/200: Loss=8.165977
(  11.121s) Epoch 041/200: Loss=8.163638 (best so far)
(  11.123s) Epoch 042/200: Loss=8.161374 (best so far)
(  11.106s) Epoch 043/200: Loss=8.159699 (best so far)
(  11.124s) Epoch 044/200: Loss=8.156365 (best so far)
(  11.121s) Epoch 045/200: Loss=8.154923 (best so far)
(  11.122s) Epoch 046/200: Loss=8.152877 (best so far)
(  11.157s) Epoch 047/200: Loss=8.150977 (best so far)
(  11.089s) Epoch 048/200: Loss=8.148016 (best so far)
(  11.105s) Epoch 049/200: Loss=8.145816 (best so far)
(  11.044s) Epoch 050/200: Loss=8.143626 (best so far)
(  11.064s) Epoch 051/200: Loss=8.142191 (best so far)
(  11.055s) Epoch 052/200: Loss=8.140048 (best so far)
(  11.136s) Epoch 053/200: Loss=8.140158
(  11.098s) Epoch 054/200: Loss=8.139616 (best so far)
(  11.071s) Epoch 055/200: Loss=8.136623 (best so far)
(  11.085s) Epoch 056/200: Loss=8.136856
(  11.082s) Epoch 057/200: Loss=8.136486 (best so far)
(  11.180s) Epoch 058/200: Loss=8.136053 (best so far)
(  11.087s) Epoch 059/200: Loss=8.135814 (best so far)
(  11.134s) Epoch 060/200: Loss=8.135790 (best so far)
(  11.090s) Epoch 061/200: Loss=8.135784 (best so far)
(  11.066s) Epoch 062/200: Loss=8.136042
(  11.052s) Epoch 063/200: Loss=8.135910
(  11.096s) Epoch 064/200: Loss=8.135678 (best so far)
(  11.072s) Epoch 065/200: Loss=8.135975
(  11.127s) Epoch 066/200: Loss=8.136244
(  11.087s) Epoch 067/200: Loss=8.135540 (best so far)
(  11.138s) Epoch 068/200: Loss=8.136253
(  11.098s) Epoch 069/200: Loss=8.137101
(  11.062s) Epoch 070/200: Loss=8.137098
(  11.072s) Epoch 071/200: Loss=8.137388
(  11.080s) Epoch 072/200: Loss=8.138881
(  11.127s) Epoch 073/200: Loss=8.139617
(  11.077s) Epoch 074/200: Loss=8.141610
(  11.151s) Epoch 075/200: Loss=8.142344
(  11.002s) Epoch 076/200: Loss=8.142634
(  11.076s) Epoch 077/200: Loss=8.142664
(  11.131s) Epoch 078/200: Loss=8.142566
(  11.075s) Epoch 079/200: Loss=8.144130
(  11.148s) Epoch 080/200: Loss=8.143328
(  11.166s) Epoch 081/200: Loss=8.142982
(  11.125s) Epoch 082/200: Loss=8.143369
(  11.094s) Epoch 083/200: Loss=8.140951
(  11.065s) Epoch 084/200: Loss=8.140959
(  11.051s) Epoch 085/200: Loss=8.139401
(  11.108s) Epoch 086/200: Loss=8.137536
(  11.082s) Epoch 087/200: Loss=8.136293
(  11.102s) Epoch 088/200: Loss=8.135440 (best so far)
(  11.073s) Epoch 089/200: Loss=8.134337 (best so far)
(  11.074s) Epoch 090/200: Loss=8.132987 (best so far)
(  11.041s) Epoch 091/200: Loss=8.131791 (best so far)
(  11.072s) Epoch 092/200: Loss=8.130113 (best so far)
(  11.087s) Epoch 093/200: Loss=8.129431 (best so far)
(  11.059s) Epoch 094/200: Loss=8.129387 (best so far)
(  11.107s) Epoch 095/200: Loss=8.128141 (best so far)
(  11.139s) Epoch 096/200: Loss=8.127806 (best so far)
(  11.095s) Epoch 097/200: Loss=8.127889
(  11.109s) Epoch 098/200: Loss=8.127092 (best so far)
(  11.117s) Epoch 099/200: Loss=8.126657 (best so far)
(  11.107s) Epoch 100/200: Loss=8.127218
(  11.102s) Epoch 101/200: Loss=8.127293
(  11.073s) Epoch 102/200: Loss=8.127201
(  11.027s) Epoch 103/200: Loss=8.126911
(  11.106s) Epoch 104/200: Loss=8.127326
(  11.083s) Epoch 105/200: Loss=8.127258
(  11.026s) Epoch 106/200: Loss=8.127759
(  11.115s) Epoch 107/200: Loss=8.127258
(  11.054s) Epoch 108/200: Loss=8.127201
(  11.098s) Epoch 109/200: Loss=8.127265
(  11.080s) Epoch 110/200: Loss=8.128173
(  11.093s) Epoch 111/200: Loss=8.129226
(  11.094s) Epoch 112/200: Loss=8.129996
(  11.113s) Epoch 113/200: Loss=8.131837
(  11.078s) Epoch 114/200: Loss=8.131533
(  11.159s) Epoch 115/200: Loss=8.132677
(  11.081s) Epoch 116/200: Loss=8.133756
(  11.100s) Epoch 117/200: Loss=8.134195
(  11.134s) Epoch 118/200: Loss=8.134606
(  11.092s) Epoch 119/200: Loss=8.134652
(  11.130s) Epoch 120/200: Loss=8.134044
(  11.091s) Epoch 121/200: Loss=8.134960
(  11.097s) Epoch 122/200: Loss=8.133740
(  11.090s) Epoch 123/200: Loss=8.133243
(  11.083s) Epoch 124/200: Loss=8.132901
(  11.045s) Epoch 125/200: Loss=8.131900
(  11.056s) Epoch 126/200: Loss=8.130875
(  11.070s) Epoch 127/200: Loss=8.129499
(  11.074s) Epoch 128/200: Loss=8.128152
(  11.138s) Epoch 129/200: Loss=8.128042
(  11.112s) Epoch 130/200: Loss=8.126568 (best so far)
(  11.145s) Epoch 131/200: Loss=8.125854 (best so far)
(  11.177s) Epoch 132/200: Loss=8.124993 (best so far)
(  11.122s) Epoch 133/200: Loss=8.123557 (best so far)
(  11.169s) Epoch 134/200: Loss=8.123867
(  11.153s) Epoch 135/200: Loss=8.123607
(  11.109s) Epoch 136/200: Loss=8.123407 (best so far)
(  11.109s) Epoch 137/200: Loss=8.122204 (best so far)
(  11.094s) Epoch 138/200: Loss=8.122743
(  11.076s) Epoch 139/200: Loss=8.122356
(  11.112s) Epoch 140/200: Loss=8.122192 (best so far)
(  11.086s) Epoch 141/200: Loss=8.121808 (best so far)
(  11.106s) Epoch 142/200: Loss=8.122475
(  11.078s) Epoch 143/200: Loss=8.121930
(  11.056s) Epoch 144/200: Loss=8.122320
(  11.028s) Epoch 145/200: Loss=8.122542
(  11.081s) Epoch 146/200: Loss=8.122131
(  11.093s) Epoch 147/200: Loss=8.122432
(  11.103s) Epoch 148/200: Loss=8.122627
(  11.073s) Epoch 149/200: Loss=8.123139
(  11.123s) Epoch 150/200: Loss=8.123076
(  11.128s) Epoch 151/200: Loss=8.124315
(  11.074s) Epoch 152/200: Loss=8.124987
(  11.109s) Epoch 153/200: Loss=8.126054
(  11.100s) Epoch 154/200: Loss=8.127137
(  11.114s) Epoch 155/200: Loss=8.127260
(  11.146s) Epoch 156/200: Loss=8.128472
(  11.062s) Epoch 157/200: Loss=8.128401
(  11.064s) Epoch 158/200: Loss=8.129505
(  11.058s) Epoch 159/200: Loss=8.129924
(  11.025s) Epoch 160/200: Loss=8.129387
(  11.049s) Epoch 161/200: Loss=8.129311
(  11.052s) Epoch 162/200: Loss=8.129432
(  11.098s) Epoch 163/200: Loss=8.128579
(  11.096s) Epoch 164/200: Loss=8.128010
(  11.088s) Epoch 165/200: Loss=8.127464
(  11.113s) Epoch 166/200: Loss=8.126802
(  11.140s) Epoch 167/200: Loss=8.125763
(  11.120s) Epoch 168/200: Loss=8.124129
(  11.098s) Epoch 169/200: Loss=8.124052
(  11.090s) Epoch 170/200: Loss=8.123192
(  11.119s) Epoch 171/200: Loss=8.122311
(  11.082s) Epoch 172/200: Loss=8.121706 (best so far)
(  11.078s) Epoch 173/200: Loss=8.120479 (best so far)
(  11.155s) Epoch 174/200: Loss=8.120188 (best so far)
(  11.079s) Epoch 175/200: Loss=8.119588 (best so far)
(  11.067s) Epoch 176/200: Loss=8.119458 (best so far)
(  11.041s) Epoch 177/200: Loss=8.119799
(  11.112s) Epoch 178/200: Loss=8.119141 (best so far)
(  11.113s) Epoch 179/200: Loss=8.118557 (best so far)
(  11.167s) Epoch 180/200: Loss=8.119060
(  11.129s) Epoch 181/200: Loss=8.118849
(  11.067s) Epoch 182/200: Loss=8.118628
(  11.075s) Epoch 183/200: Loss=8.119056
(  11.156s) Epoch 184/200: Loss=8.118580
(  11.050s) Epoch 185/200: Loss=8.119362
(  11.163s) Epoch 186/200: Loss=8.118666
(  11.096s) Epoch 187/200: Loss=8.119083
(  11.137s) Epoch 188/200: Loss=8.119894
(  11.106s) Epoch 189/200: Loss=8.119666
(  11.101s) Epoch 190/200: Loss=8.120124
(  11.148s) Epoch 191/200: Loss=8.120873
(  11.111s) Epoch 192/200: Loss=8.120889
(  11.140s) Epoch 193/200: Loss=8.122205
(  11.134s) Epoch 194/200: Loss=8.122744
(  11.121s) Epoch 195/200: Loss=8.123760
(  11.129s) Epoch 196/200: Loss=8.124612
(  11.092s) Epoch 197/200: Loss=8.125684
(  11.052s) Epoch 198/200: Loss=8.125061
(  11.202s) Epoch 199/200: Loss=8.125765
(  11.072s) Epoch 200/200: Loss=8.125586
Training for 200 epochs took 2235.872s total and 11.179s average
Saving best model and options to exp8.pth
done!!!
